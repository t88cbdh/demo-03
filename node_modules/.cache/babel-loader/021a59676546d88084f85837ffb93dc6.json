{"ast":null,"code":"var _jsxFileName = \"/Users/tita/demotwo/src/components/ToDoList/index.js\";\nimport { Component, Fragment } from \"react\";\nimport ToDoItem from \"../ToDoItem\";\nimport All from '../All';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  marginTop: '20px'\n};\nexport default class ToDoList extends Component {\n  constructor(props) {\n    super(props);\n    this.finish = this.state.finished;\n    this.state = {\n      inputValue: '',\n      list: [],\n      finished: 0,\n      checked: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleItemFinish = this.handleItemFinish.bind(this);\n    this.handleUnfinish = this.handleUnfinish.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u4EE3\\u529E\\u4E8B\\u9879\",\n          value: this.state.inputValue,\n          onChange: this.handleChange //this指向组件\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClick.bind(this),\n          children: \"\\u6DFB\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.list.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(ToDoItem, {\n              item: item,\n              index: index,\n              handlefinish: this.handleItemFinish,\n              handleUnfinish: this.handleUnfinish,\n              checked: this.state.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleDelete.bind(this),\n              className: \"delete-btn\",\n              children: \"\\u5220\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(All, {\n        finish: this.state.finished,\n        len: this.state.list.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleChange(e) {\n    // console.log(this); undefined this指向有问题\n    // console.log(e.target.value);\n    this.setState({\n      inputValue: e.target.value\n    });\n  }\n\n  handleClick() {\n    this.setState({\n      list: [...this.state.list, this.state.inputValue],\n      inputValue: '' //在点击添加按钮后，把input框清空\n\n    });\n  }\n\n  handleDelete(index) {\n    let list = [...this.state.list]; //list做一个拷贝\n\n    list.splice(index, 1);\n    this.setState({\n      list\n    });\n  }\n\n  handleItemFinish() {\n    finish++;\n    this.setState({\n      finished: finish,\n      checked: true\n    });\n  }\n\n  handleUnfinish() {\n    finish--;\n    this.setState({\n      finished: finish,\n      checked: false\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/tita/demotwo/src/components/ToDoList/index.js"],"names":["Component","Fragment","ToDoItem","All","style","marginTop","ToDoList","constructor","props","finish","state","finished","inputValue","list","checked","handleChange","bind","handleItemFinish","handleUnfinish","render","handleClick","map","item","index","handleDelete","length","e","setState","target","value","splice"],"mappings":"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","sourcesContent":["import { Component, Fragment } from \"react\";\nimport ToDoItem from \"../ToDoItem\"\nimport All from '../All'\nimport './index.css'\n\nconst style = {\n  marginTop: '20px'\n}\n\n\n\nexport default class ToDoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: '',\n      list: [],\n      finished: 0,\n      checked: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleItemFinish = this.handleItemFinish.bind(this);\n    this.handleUnfinish = this.handleUnfinish.bind(this);\n  }\n\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"list\" style={style}>\n          <input type=\"text\" placeholder=\"请输入代办事项\"\n            value={this.state.inputValue}\n            onChange={this.handleChange} //this指向组件\n          />\n          <button onClick={this.handleClick.bind(this)}>添加</button>\n        </div >\n        <ul>\n          {\n            this.state.list.map((item, index) => {\n              return (\n                <div key={index} className=\"item\">\n                  <ToDoItem item={item} index={index} handlefinish={this.handleItemFinish} handleUnfinish={this.handleUnfinish} checked={this.state.checked} />\n                  <button onClick={this.handleDelete.bind(this)} className=\"delete-btn\">删除</button>\n                </div>\n              )\n            })\n          }\n        </ul>\n        <All finish={this.state.finished} len={this.state.list.length} />\n      </Fragment>\n    )\n  }\n  handleChange(e) {\n    // console.log(this); undefined this指向有问题\n    // console.log(e.target.value);\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n\n  handleClick() {\n    this.setState({\n      list: [...this.state.list, this.state.inputValue],\n      inputValue: '' //在点击添加按钮后，把input框清空\n    })\n  }\n\n  handleDelete(index) {\n    let list = [...this.state.list]; //list做一个拷贝\n    list.splice(index, 1);\n    this.setState({\n      list\n    })\n  }\n  finish = this.state.finished;\n  handleItemFinish() {\n    finish++;\n    this.setState({\n      finished: finish,\n      checked: true\n    })\n  }\n  handleUnfinish() {\n    finish--;\n    this.setState({\n      finished: finish,\n      checked: false\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}