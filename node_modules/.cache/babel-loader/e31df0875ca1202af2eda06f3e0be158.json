{"ast":null,"code":"var _jsxFileName = \"/Users/tita/demotwo/src/App.jsx\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: '001',\n        name: '吃饭',\n        done: true\n      }, {\n        id: '002',\n        name: '睡觉',\n        done: true\n      }, {\n        id: '003',\n        name: '打代码',\n        done: false\n      }, {\n        id: '004',\n        name: '逛街',\n        done: false\n      }]\n    };\n\n    this.addTodo = todoObj => {\n      //获取原todos\n      const {\n        todos\n      } = this.state; //追加一个todo\n\n      const newTodos = [todoObj, ...todos]; //更新状态\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.updateTodo = (id, done) => {\n      //获取状态中的todos\n      const {\n        todos\n      } = this.state; //匹配处理数据\n\n      const newTodos = todos.map(todoObj => {\n        if (todoObj.id === id) return { ...todoObj,\n          done\n        };else return todoObj;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.deleteTodo = id => {\n      //获取原来的todos\n      const {\n        todos\n      } = this.state; //删除指定id的todo对象\n\n      const newTodos = todos.filter(todoObj => {\n        return todoObj.id !== id;\n      }); //更新状态\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.checkAllTodo = done => {\n      //获取原来的todos\n      const {\n        todos\n      } = this.state; //加工数据\n\n      const newTodos = todos.map(todoObj => {\n        return { ...todoObj,\n          done\n        };\n      }); //更新状态\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.clearAllDone = () => {\n      //获取原来的todos\n      const {\n        todos\n      } = this.state; //过滤数据\n\n      const newTodos = todos.filter(todoObj => {\n        return !todoObj.done;\n      }); //更新状态\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          addTodo: this.addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          todos: todos,\n          updateTodo: this.updateTodo,\n          deleteTodo: this.deleteTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          todos: todos,\n          checkAllTodo: this.checkAllTodo,\n          clearAllDone: this.clearAllDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/tita/demotwo/src/App.jsx"],"names":["React","Component","Header","List","Footer","App","state","todos","id","name","done","addTodo","todoObj","newTodos","setState","updateTodo","map","deleteTodo","filter","checkAllTodo","clearAllDone","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Header from './components/Header'\nimport List from './components/List'\nimport Footer from './components/Footer'\nimport './App.css'\n\nexport default class App extends Component {\n\n\n  //初始化状态\n  state = {\n    todos: [\n      { id: '001', name: '吃饭', done: true },\n      { id: '002', name: '睡觉', done: true },\n      { id: '003', name: '打代码', done: false },\n      { id: '004', name: '逛街', done: false }\n    ]\n  }\n\n  //addTodo用于添加一个todo，接收的参数是todo对象\n  addTodo = (todoObj) => {\n    //获取原todos\n    const { todos } = this.state\n    //追加一个todo\n    const newTodos = [todoObj, ...todos]\n    //更新状态\n    this.setState({ todos: newTodos })\n  }\n\n  //updateTodo用于更新一个todo对象\n  updateTodo = (id, done) => {\n    //获取状态中的todos\n    const { todos } = this.state\n    //匹配处理数据\n    const newTodos = todos.map((todoObj) => {\n      if (todoObj.id === id) return { ...todoObj, done }\n      else return todoObj\n    })\n    this.setState({ todos: newTodos })\n  }\n\n  //deleteTodo用于删除一个todo对象\n  deleteTodo = (id) => {\n    //获取原来的todos\n    const { todos } = this.state\n    //删除指定id的todo对象\n    const newTodos = todos.filter((todoObj) => {\n      return todoObj.id !== id\n    })\n    //更新状态\n    this.setState({ todos: newTodos })\n  }\n\n  //checkAllTodo用于全选\n  checkAllTodo = (done) => {\n    //获取原来的todos\n    const { todos } = this.state\n    //加工数据\n    const newTodos = todos.map((todoObj) => {\n      return { ...todoObj, done }\n    })\n    //更新状态\n    this.setState({ todos: newTodos })\n  }\n\n  //clearAllDone用于清除所有已完成的\n  clearAllDone = () => {\n    //获取原来的todos\n    const { todos } = this.state\n    //过滤数据\n    const newTodos = todos.filter((todoObj) => {\n      return !todoObj.done\n    })\n    //更新状态\n    this.setState({ todos: newTodos })\n  }\n\n  render() {\n    const { todos } = this.state\n    return (\n      <div className=\"todo-container\">\n        <div className=\"todo-wrap\">\n          <Header addTodo={this.addTodo} />\n          <List todos={todos} updateTodo={this.updateTodo} deleteTodo={this.deleteTodo} />\n          <Footer todos={todos} checkAllTodo={this.checkAllTodo} clearAllDone={this.clearAllDone} />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}